function init_sidebar() {
    var e = function() {
        $RIGHT_COL.css("min-height", $(window).height());
        var e = $BODY.outerHeight(),
            a = $BODY.hasClass("footer_fixed") ? -10 : $FOOTER.height(),
            t = $LEFT_COL.eq(1).height() + $SIDEBAR_FOOTER.height(),
            n = e < t ? t : e;
        n -= $NAV_MENU.height() + a, $RIGHT_COL.css("min-height", n)
    };
    $SIDEBAR_MENU.find("a").on("click", function(a) {
        console.log("clicked - sidebar_menu");
        var t = $(this).parent();
        t.is(".active") ? (t.removeClass("active active-sm"), $("ul:first", t).slideUp(function() {
            e()
        })) : (t.parent().is(".child_menu") ? $BODY.is(".nav-sm") && (t.parent().find("li").removeClass("active active-sm"), t.parent().find("li ul").slideUp()) : ($SIDEBAR_MENU.find("li").removeClass("active active-sm"), $SIDEBAR_MENU.find("li ul").slideUp()), t.addClass("active"), $("ul:first", t).slideDown(function() {
            e()
        }))
    }), $MENU_TOGGLE.on("click", function() {
        console.log("clicked - menu toggle"), $BODY.hasClass("nav-md") ? ($SIDEBAR_MENU.find("li.active ul").hide(), $SIDEBAR_MENU.find("li.active").addClass("active-sm").removeClass("active")) : ($SIDEBAR_MENU.find("li.active-sm ul").show(), $SIDEBAR_MENU.find("li.active-sm").addClass("active").removeClass("active-sm")), $BODY.toggleClass("nav-md nav-sm"), e()
    }), $SIDEBAR_MENU.find('a[href="' + CURRENT_URL + '"]').parent("li").addClass("current-page"), $SIDEBAR_MENU.find("a").filter(function() {
        return this.href == CURRENT_URL
    }).parent("li").addClass("current-page").parents("ul").slideDown(function() {
        e()
    }).parent().addClass("active"), $(window).smartresize(function() {
        e()
    }), e(), $.fn.mCustomScrollbar && $(".menu_fixed").mCustomScrollbar({
        autoHideScrollbar: !0,
        theme: "minimal",
        mouseWheel: {
            preventDefault: !0
        }
    })
}

function countChecked() {
    "all" === checkState && $(".bulk_action input[name='table_records']").iCheck("check"), "none" === checkState && $(".bulk_action input[name='table_records']").iCheck("uncheck");
    var e = $(".bulk_action input[name='table_records']:checked").length;
    e ? ($(".column-title").hide(), $(".bulk-actions").show(), $(".action-cnt").html(e + " انتخاب شده")) : ($(".column-title").show(), $(".bulk-actions").hide())
}

function gd(e, a, t) {
    return new Date(e, a - 1, t).getTime()
}

function init_flot_chart(n) {
    if ("undefined" != typeof $.plot) {
        console.log("init_flot_chart");
        for (var e = [
            [gd(2012, 1, 1), 17],
            [gd(2012, 1, 2), 74],
            [gd(2012, 1, 3), 6],
            [gd(2012, 1, 4), 39],
            [gd(2012, 1, 5), 20],
            [gd(2012, 1, 6), 85],
            [gd(2012, 1, 7), 7]
        ], a = [
            [gd(2012, 1, 1), 82],
            [gd(2012, 1, 2), 23],
            [gd(2012, 1, 3), 66],
            [gd(2012, 1, 4), 9],
            [gd(2012, 1, 5), 119],
            [gd(2012, 1, 6), 6],
            [gd(2012, 1, 7), 9]
        ], t = [], n, o = 0; o < 30; o++) t.push([new Date(Date.today().add(o).days()).getTime(), randNum() + o + o + 10]);
        var i = {
                series: {
                    lines: {
                        show: !1,
                        fill: !0
                    },
                    splines: {
                        show: !0,
                        tension: .4,
                        lineWidth: 1,
                        fill: .4
                    },
                    points: {
                        radius: 0,
                        show: !0
                    },
                    shadowSize: 2
                },
                grid: {
                    verticalLines: !0,
                    hoverable: !0,
                    clickable: !0,
                    tickColor: "#d5d5d5",
                    borderWidth: 1,
                    color: "#fff"
                },
                colors: ["rgba(38, 185, 154, 0.38)", "rgba(3, 88, 106, 0.38)"],
                xaxis: {
                    tickColor: "rgba(51, 51, 51, 0.06)",
                    mode: "time",
                    tickSize: [1, "day"],
                    axisLabel: "Date",
                    axisLabelUseCanvas: !0,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: "Verdana, Arial",
                    axisLabelPadding: 10
                },
                yaxis: {
                    ticks: 8,
                    tickColor: "rgba(51, 51, 51, 0.06)"
                },
                tooltip: !1
            },
            r = {
                grid: {
                    show: !0,
                    aboveData: !0,
                    color: "#3f3f3f",
                    labelMargin: 10,
                    axisMargin: 0,
                    borderWidth: 0,
                    borderColor: null,
                    minBorderMargin: 5,
                    clickable: !0,
                    hoverable: !0,
                    autoHighlight: !0,
                    mouseActiveRadius: 100
                },
                series: {
                    lines: {
                        show: !0,
                        fill: !0,
                        lineWidth: 2,
                        steps: !1
                    },
                    points: {
                        show: !0,
                        radius: 4.5,
                        symbol: "circle",
                        lineWidth: 3
                    }
                },
                legend: {
                    position: "ne",
                    margin: [0, -25],
                    noColumns: 0,
                    labelBoxBorderColor: null,
                    labelFormatter: function(e, a) {
                        return e + "&nbsp;&nbsp;"
                    },
                    width: 40,
                    height: 1
                },
                colors: ["#96CA59", "#3F97EB", "#72c380", "#6f7a8a", "#f7cb38", "#5a8022", "#2c7282"],
                shadowSize: 0,
                tooltip: !0,
                tooltipOpts: {
                    content: "%s: %y.0",
                    xDateFormat: "%d/%m",
                    shifts: {
                        x: -30,
                        y: -50
                    },
                    defaultTheme: !1
                },
                yaxis: {
                    min: 0
                },
                xaxis: {
                    mode: "time",
                    minTickSize: [1, "day"],
                    timeformat: "%d/%m/%y",
                    min: t[0][0],
                    max: t[20][0]
                }
            },
            l = {
                series: {
                    curvedLines: {
                        apply: !0,
                        active: !0,
                        monotonicFit: !0
                    }
                },
                colors: ["#26B99A"],
                grid: {
                    borderWidth: {
                        top: 0,
                        right: 0,
                        bottom: 1,
                        left: 1
                    },
                    borderColor: {
                        bottom: "#7F8790",
                        left: "#7F8790"
                    }
                }
            };
        $("#chart_plot_01").length && (console.log("Plot1"), $.plot($("#chart_plot_01"), [e, a], i)), $("#chart_plot_02").length && (console.log("Plot2"), $.plot($("#chart_plot_02"), [{
            label: "Email Sent",
            data: t,
            lines: {
                fillColor: "rgba(150, 202, 89, 0.12)"
            },
            points: {
                fillColor: "#fff"
            }
        }], r)), $("#chart_plot_03").length && (console.log("Plot3"), $.plot($("#chart_plot_03"), [{
            label: "خریدها",
            data: n,
            lines: {
                fillColor: "rgba(150, 202, 89, 0.12)"
            },
            points: {
                fillColor: "#fff"
            }
        }], l))
    }
}

function init_starrr() {
    "undefined" != typeof starrr && (console.log("init_starrr"), $(".stars").starrr(), $(".stars-existing").starrr({
        rating: 4
    }), $(".stars").on("starrr:change", function(e, a) {
        $(".stars-count").html(a)
    }), $(".stars-existing").on("starrr:change", function(e, a) {
        $(".stars-count-existing").html(a)
    }))
}

function init_autosize() {
    "undefined" != typeof $.fn.autosize && autosize($(".resizable_textarea"))
}

function init_parsley() {
    if ("undefined" != typeof parsley) {
        console.log("init_parsley"), $("parsley:field:validate", function() {
            e()
        }), $("#demo-form .btn").on("click", function() {
            $("#demo-form").parsley().validate(), e()
        });
        var e = function() {
            !0 === $("#demo-form").parsley().isValid() ? ($(".bs-callout-info").removeClass("hidden"), $(".bs-callout-warning").addClass("hidden")) : ($(".bs-callout-info").addClass("hidden"), $(".bs-callout-warning").removeClass("hidden"))
        };
        $("parsley:field:validate", function() {
            e()
        }), $("#demo-form2 .btn").on("click", function() {
            $("#demo-form2").parsley().validate(), e()
        });
        var e = function() {
            !0 === $("#demo-form2").parsley().isValid() ? ($(".bs-callout-info").removeClass("hidden"), $(".bs-callout-warning").addClass("hidden")) : ($(".bs-callout-info").addClass("hidden"), $(".bs-callout-warning").removeClass("hidden"))
        };
        try {
            hljs.initHighlightingOnLoad()
        } catch (a) {}
    }
}

function onAddTag(e) {
    alert("Added a tag: " + e)
}

function onRemoveTag(e) {
    alert("Removed a tag: " + e)
}

function onChangeTag(e, a) {
    alert("Changed a tag: " + a)
}

function init_TagsInput() {
    "undefined" != typeof $.fn.tagsInput && $(".apply-tags").tagsInput({
        width: "auto"
    })
}

function init_select2() {
    "undefined" != typeof select2 && (console.log("init_toolbox"), $(".select2_single").select2({
        placeholder: "Select a state",
        allowClear: !0
    }), $(".select2_group").select2({}), $(".select2_multiple").select2({
        maximumSelectionLength: 4,
        placeholder: "With Max Selection limit 4",
        allowClear: !0
    }))
}

function init_wysiwyg() {
    function e(e, a) {
        var t = "";
        "unsupported-file-type" === e ? t = "Unsupported format " + a : console.log("error uploading file", e, a), $('<div class="alert"> <button type="button" class="close" data-dismiss="alert">&times;</button><strong>File upload error</strong> ' + t + " </div>").prependTo("#alerts")
    }
    "undefined" != typeof $.fn.wysiwyg && (console.log("init_wysiwyg"), $(".editor-wrapper").each(function() {
        var a = $(this).attr("id");
        $(this).wysiwyg({
            toolbarSelector: '[data-target="#' + a + '"]',
            fileUploadError: e
        })
    }), window.prettyPrint, prettyPrint())
}

function init_knob() {
    if ("undefined" != typeof $.fn.knob) {
        console.log("init_knob"), $(".knob").knob({
            change: function(e) {},
            release: function(e) {
                console.log("release : " + e)
            },
            cancel: function() {
                console.log("cancel : ", this)
            },
            draw: function() {
                if ("tron" == this.$.data("skin")) {
                    this.cursorExt = .3;
                    var e, a = this.arc(this.cv),
                        t = 1;
                    return this.g.lineWidth = this.lineWidth, this.o.displayPrevious && (e = this.arc(this.v), this.g.beginPath(), this.g.strokeStyle = this.pColor, this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, e.s, e.e, e.d), this.g.stroke()), this.g.beginPath(), this.g.strokeStyle = t ? this.o.fgColor : this.fgColor, this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, a.s, a.e, a.d), this.g.stroke(), this.g.lineWidth = 2, this.g.beginPath(), this.g.strokeStyle = this.o.fgColor, this.g.arc(this.xy, this.xy, this.radius - this.lineWidth + 1 + 2 * this.lineWidth / 3, 0, 2 * Math.PI, !1), this.g.stroke(), !1
                }
            }
        });
        var e, a = 0,
            t = 0,
            n = 0,
            o = $("div.idir"),
            i = $("div.ival"),
            r = function() {
                n++, o.show().html("+").fadeOut(), i.html(n)
            },
            l = function() {
                n--, o.show().html("-").fadeOut(), i.html(n)
            };
        $("input.infinite").knob({
            min: 0,
            max: 20,
            stopper: !1,
            change: function() {
                e > this.cv ? a ? (l(), a = 0) : (a = 1, t = 0) : e < this.cv && (t ? (r(), t = 0) : (t = 1, a = 0)), e = this.cv
            }
        })
    }
}

function init_InputMask() {
    "undefined" != typeof $.fn.inputmask && (console.log("init_InputMask"), $(":input").inputmask())
}

function init_ColorPicker() {
    "undefined" != typeof $.fn.colorpicker && (console.log("init_ColorPicker"), $(".demo1").colorpicker(), $(".demo2").colorpicker(), $("#demo_forceformat").colorpicker({
        format: "rgba",
        horizontal: !0
    }), $("#demo_forceformat3").colorpicker({
        format: "rgba"
    }), $(".demo-auto").colorpicker())
}

function init_IonRangeSlider() {
    "undefined" != typeof $.fn.ionRangeSlider && (console.log("init_IonRangeSlider"), $("#range_27").ionRangeSlider({
        type: "double",
        min: 1e6,
        max: 2e6,
        grid: !0,
        force_edges: !0
    }), $("#range").ionRangeSlider({
        hide_min_max: !0,
        keyboard: !0,
        min: 0,
        max: 5e3,
        from: 1e3,
        to: 4e3,
        type: "double",
        step: 1,
        prefix: "$",
        grid: !0
    }), $("#range_25").ionRangeSlider({
        type: "double",
        min: 1e6,
        max: 2e6,
        grid: !0
    }), $("#range_26").ionRangeSlider({
        type: "double",
        min: 0,
        max: 1e4,
        step: 500,
        grid: !0,
        grid_snap: !0
    }), $("#range_31").ionRangeSlider({
        type: "double",
        min: 0,
        max: 100,
        from: 30,
        to: 70,
        from_fixed: !0
    }), $(".range_min_max").ionRangeSlider({
        type: "double",
        min: 0,
        max: 100,
        from: 30,
        to: 70,
        max_interval: 50
    }), $(".range_time24").ionRangeSlider({
        min: +moment().subtract(12, "hours").format("X"),
        max: +moment().format("X"),
        from: +moment().subtract(6, "hours").format("X"),
        grid: !0,
        force_edges: !0,
        prettify: function(e) {
            var a = moment(e, "X");
            return a.format("Do MMMM, HH:mm")
        }
    }))
}

function init_SmartWizard() {
    "undefined" != typeof $.fn.smartWizard && (console.log("init_SmartWizard"), $("#wizard").smartWizard({
        labelNext: "بعدی",
        labelPrevious: "قبلی",
        labelFinish: "پایان"
    }), $("#wizard_verticle").smartWizard({
        transitionEffect: "slide",
        labelNext: "بعدی",
        labelPrevious: "قبلی",
        labelFinish: "پایان"
    }), $(".buttonNext").addClass("btn btn-success"), $(".buttonPrevious").addClass("btn btn-primary"), $(".buttonFinish").addClass("btn btn-default"))
}

function init_validator() {
    "undefined" != typeof validator && (console.log("init_validator"), validator.message.invalid = "ورودی مورد انتظار نیست", validator.message["short"] = "ورودی کوتاه است", validator.message["long"] = "ورودی بلند است", validator.message.checked = "باید تایید شود", validator.message.empty = "لطفا چیزی را اینجا بنویسید", validator.message.select = "لطفا یک گزینه را انتخاب کنید", validator.message.number_min = "خیلی کم", validator.message.number_max = "خیلی زیاد", validator.message.url = "URL نا معتبر", validator.message.number = "عدد نمی‌باشد", validator.message.email = "آدرس ایمیل نا معتبر است.", validator.message.email_repeat = "تکرار ایمیل با ایمیل مطابقت ندارد", validator.message.date = "تاریخ نامعتبر", validator.message.time = "زمان نامعتبر", validator.message.password_repeat = "تکرار رمزعبور با رمزعبور مطابقت ندارد", validator.message.no_match = "مطابقت ندارد", validator.message.complete = "ورودی کامل نیست", $("form").on("blur", "input[required], input.optional, select.required", validator.checkField).on("change", "select.required", validator.checkField).on("keypress", "input[required][pattern]", validator.keypress), $(".multi.required").on("keyup blur", "input", function() {
        validator.checkField.apply($(this).siblings().last()[0])
    }), $("form").submit(function(e) {
        e.preventDefault();
        var a = !0;
        return validator.checkAll($(this)) || (a = !1), a && this.submit(), !1
    }))
}

function init_PNotify() {
    "undefined" != typeof PNotify && (console.log("init_PNotify"), new PNotify({
        title: "PNotify",
        type: "info",
        text: "خوش آمدی. سعی کنید از من دور شوید شما می توانید همه چیز را در پشت من کلیک کنید، زیرا من غیر مسدود شده هستم.",
        nonblock: {
            nonblock: !0
        },
        addclass: "dark",
        styling: "bootstrap3",
        hide: !1,
        before_close: function(e) {
            return e.update({
                title: e.options.title + " - Enjoy your Stay",
                before_close: null
            }), e.queueRemove(), !1
        }
    }))
}

function init_CustomNotification() {
    if (console.log("run_customtabs"), CustomTabs = function(e) {
        $(".tabbed_notifications > div").hide(), $(".tabbed_notifications > div:first-of-type").show(), $("#custom_notifications").removeClass("dsp_none"), $(".notifications a").click(function(e) {
            e.preventDefault();
            var a = $(this),
                t = "#" + a.parents(".notifications").data("tabbed_notifications"),
                n = a.closest("li").siblings().children("a"),
                o = a.attr("href");
            n.removeClass("active"), a.addClass("active"), $(t).children("div").hide(), $(o).show()
        })
    }, "undefined" != typeof CustomTabs) {
        console.log("init_CustomTabs");
        var e = 10;
        TabbedNotification = function(a) {
            var t = "<div id='ntf" + e + "' class='text alert-" + a.type + "' style='display:none'><h2><i class='fa fa-bell'></i> " + a.title + "</h2><div class='close'><a href='javascript:;' class='notification_close'><i class='fa fa-close'></i></a></div><p>" + a.text + "</p></div>";
            document.getElementById("custom_notifications") ? ($("#custom_notifications ul.notifications").append("<li><a id='ntlink" + e + "' class='alert-" + a.type + "' href='#ntf" + e + "'><i class='fa fa-bell animated shake'></i></a></li>"), $("#custom_notifications #notif-group").append(t), e++, CustomTabs(a)) : alert("doesnt exists")
        }, CustomTabs();
        var a = idname = "";
        $(document).on("click", ".notification_close", function(e) {
            idname = $(this).parent().parent().attr("id"), a = idname.substr(-2), $("#ntf" + a).remove(), $("#ntlink" + a).parent().remove(), $(".notifications a").first().addClass("active"), $("#notif-group div").first().css("display", "block")
        })
    }
}

function init_compose() {
    "undefined" != typeof $.fn.slideToggle && (console.log("init_compose"), $("#compose, .compose-close").click(function() {
        $(".compose").slideToggle()
    }))
}

function toggleFullScreen() {
    document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement ? document.exitFullscreen ? document.exitFullscreen() : document.msExitFullscreen ? document.msExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen() : document.documentElement.requestFullscreen ? document.documentElement.requestFullscreen() : document.documentElement.msRequestFullscreen ? document.documentElement.msRequestFullscreen() : document.documentElement.mozRequestFullScreen ? document.documentElement.mozRequestFullScreen() : document.documentElement.webkitRequestFullscreen && document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT)
}

function lock_screen() {
    setInterval(function() {
        var e = new Date,
            a = e.getHours(),
            t = e.getMinutes(),
            n = e.getSeconds();
        t = (t < 10 ? "0" : "") + t, n = (n < 10 ? "0" : "") + n, a = (a < 10 ? "0" : "") + a;
        var o = a + ":" + t + ":" + n;
        $("#lock_screen .clock").html(o)
    }, 1e3), $(document).on("click", ".lock_btn", function(e) {
        e.preventDefault(), $("body").addClass("lock")
    }), $(document).on("mouseover", ".unlock #icon_lock", function(e) {
        $(this).removeClass("fa-lock").addClass("fa-unlock")
    }), $(document).on("mouseout", ".unlock #icon_lock", function(e) {
        $(this).removeClass("fa-unlock").addClass("fa-lock")
    }), $(document).on("click", ".unlock", function(e) {
        e.preventDefault(), $("body").removeClass("lock")
    })
}! function(e, a) {
    var t = function(e, a, t) {
        var n;
        return function() {
            function o() {
                t || e.apply(i, r), n = null
            }
            var i = this,
                r = arguments;
            n ? clearTimeout(n) : t && e.apply(i, r), n = setTimeout(o, a || 100)
        }
    };
    jQuery.fn[a] = function(e) {
        return e ? this.bind("resize", t(e)) : this.trigger(a)
    }
}(jQuery, "smartresize"),
    function(e, a) {
        var t = function(e, a, t) {
            var n;
            return function() {
                function o() {
                    t || e.apply(i, r), n = null
                }
                var i = this,
                    r = arguments;
                n ? clearTimeout(n) : t && e.apply(i, r), n = setTimeout(o, a || 100)
            }
        };
        jQuery.fn[a] = function(e) {
            return e ? this.bind("resize", t(e)) : this.trigger(a)
        }
    }(jQuery, "smartresize");
var CURRENT_URL = window.location.href.split("#")[0].split("?")[0],
    $BODY = $("body"),
    $MENU_TOGGLE = $("#menu_toggle"),
    $SIDEBAR_MENU = $("#sidebar-menu"),
    $SIDEBAR_FOOTER = $(".sidebar-footer"),
    $LEFT_COL = $(".left_col"),
    $RIGHT_COL = $(".right_col"),
    $NAV_MENU = $(".nav_menu"),
    $FOOTER = $("footer"),
    randNum = function() {
        return Math.floor(21 * Math.random()) + 20
    };
$(document).ready(function() {
    $(".collapse-link").on("click", function() {
        var e = $(this).closest(".x_panel"),
            a = $(this).find("i"),
            t = e.find(".x_content");
        e.attr("style") ? t.slideToggle(200, function() {
            e.removeAttr("style")
        }) : (t.slideToggle(200), e.css("height", "auto")), a.toggleClass("fa-chevron-up fa-chevron-down")
    }), $(".close-link").click(function() {
        var e = $(this).closest(".x_panel");
        e.remove()
    })
}), $(document).ready(function() {
    $('[data-toggle="tooltip"]').tooltip({
        container: "body"
    })
}), $(".progress .progress-bar")[0] && $(".progress .progress-bar").progressbar(), $(document).ready(function() {
    if ($(".js-switch")[0]) {
        var e = Array.prototype.slice.call(document.querySelectorAll(".js-switch"));
        e.forEach(function(e) {
            new Switchery(e, {
                color: "#26B99A"
            })
        })
    }
}), $(document).ready(function() {
    $("input.flat")[0] && $(document).ready(function() {
        $("input.flat").iCheck({
            checkboxClass: "icheckbox_flat-green",
            radioClass: "iradio_flat-green"
        })
    })
}), $("table input").on("ifChecked", function() {
    checkState = "", $(this).parent().parent().parent().addClass("selected"), countChecked()
}), $("table input").on("ifUnchecked", function() {
    checkState = "", $(this).parent().parent().parent().removeClass("selected"), countChecked()
});
var checkState = "";
$(".bulk_action input").on("ifChecked", function() {
    checkState = "", $(this).parent().parent().parent().addClass("selected"), countChecked()
}), $(".bulk_action input").on("ifUnchecked", function() {
    checkState = "", $(this).parent().parent().parent().removeClass("selected"), countChecked()
}), $(".bulk_action input#check-all").on("ifChecked", function() {
    checkState = "all", countChecked()
}), $(".bulk_action input#check-all").on("ifUnchecked", function() {
    checkState = "none", countChecked()
}), $(document).ready(function() {
    $(".expand").on("click", function() {
        $(this).next().slideToggle(200), $expand = $(this).find(">:first-child"), "+" == $expand.text() ? $expand.text("-") : $expand.text("+")
    })
}), "undefined" != typeof NProgress && ($(document).ready(function() {
    NProgress.start();
}), $(window).on('load', function() {
    NProgress.done();
}));
var originalLeave = $.fn.popover.Constructor.prototype.leave;
$.fn.popover.Constructor.prototype.leave = function(e) {
    var a, t, n = e instanceof this.constructor ? e : $(e.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type);
    originalLeave.call(this, e), e.currentTarget && (a = $(e.currentTarget).siblings(".popover"), t = n.timeout, a.one("mouseenter", function() {
        clearTimeout(t), a.one("mouseleave", function() {
            $.fn.popover.Constructor.prototype.leave.call(n, n)
        })
    }))
}, $("body").popover({
    selector: "[data-popover]",
    trigger: "click hover",
    delay: {
        show: 50,
        hide: 400
    }
}), $(document).ready(function() {
    init_sidebar(), init_wysiwyg(), init_InputMask(), init_knob(), init_IonRangeSlider(), init_ColorPicker(), init_TagsInput(), init_parsley(), init_SmartWizard(), init_select2(), init_validator(), init_PNotify(), init_starrr(), init_compose(), init_CustomNotification(), init_autosize(), lock_screen()
});